// Arg-Graph

// a simple JQuery library to generate directional graphs.
// jQuery Plugin Boilerplate : http://stefangabos.ro/jquery/jquery-plugin-boilerplate/

//####################################################
// version 1.0, 2 Apr 2018
// by Naser Yousefi
// Website: https://github.com/n-yousefi/Arg-Graph
//####################################################


!function (t) { t.ArgGraph = function (e, r) { var a = { groupingAttr: "data-group-id", onFoo: function () { } }, n = this; n.settings = {}; var i, f, o = t(e), s = new Object, h = !1, d = function (t) { return { x: t.offsetLeft + t.offsetWidth / 2, y: t.offsetTop + t.offsetHeight / 2 } }, p = function (e, r) { var a, n, i, f = d(r), o = { x1: e.x, y1: e.y, x2: f.x, y2: f.y }, s = (a = r, (n = new Object).L1 = { x1: a.offsetLeft, y1: a.offsetTop, x2: a.offsetLeft, y2: a.offsetTop + a.offsetHeight }, n.L2 = { x1: a.offsetLeft, y1: a.offsetTop, x2: a.offsetLeft + a.offsetWidth, y2: a.offsetTop }, n.L3 = { x1: a.offsetLeft, y1: a.offsetTop + a.offsetHeight, x2: a.offsetLeft + a.offsetWidth, y2: a.offsetTop + a.offsetHeight }, n.L4 = { x1: a.offsetLeft + a.offsetWidth, y1: a.offsetTop, x2: a.offsetLeft + a.offsetWidth, y2: a.offsetTop + a.offsetHeight }, n); return t.each(s, function (t, e) { if (!i) { var r = (a = o, f = (((n = e).x2 - n.x1) * (a.y1 - n.y1) - (n.y2 - n.y1) * (a.x1 - n.x1)) / ((n.y2 - n.y1) * (a.x2 - a.x1) - (n.x2 - n.x1) * (a.y2 - a.y1)), s = ((a.x2 - a.x1) * (a.y1 - n.y1) - (a.y2 - a.y1) * (a.x1 - n.x1)) / ((n.y2 - n.y1) * (a.x2 - a.x1) - (n.x2 - n.x1) * (a.y2 - a.y1)), f >= 0 && f <= 1 && s >= 0 && s <= 1 ? { x: a.x1 + f * (a.x2 - a.x1), y: a.y1 + f * (a.y2 - a.y1) } : null); r && (i = r) } var a, n, f, s }), i }, u = function (t, e) { return "M" + t.x + "," + t.y + " L" + e.x + "," + e.y + " " }, g = function () { var r = o.find("svg > g")[0]; if (r) { r.innerHTML = ""; var a = o.find(".arg-Graph_item"); t.each(a, function (a, n) { var o = d(n), g = t(n); if (h && "C" == i && g.attr("Id") == f && s) { var c = '<path d="' + u(o, s) + '"/>'; r.innerHTML += c } var x = g.attr("data-next-ids"); x && (x = x.split(","), t.each(x, function (t, a) { if (a) { var n = e.querySelector("#" + a), i = p(o, n); if (i) { var f = '<path d="' + u(o, i) + '"/>'; r.innerHTML += f } } })) }) } }; n.resetGraph = function () { !function () { var e = o.find("#arg-Graph_svg"); if (!e || e.length <= 0) { var r = t('<svg id="arg-Graph_svg" xmlns="http://www.w3.org/2000/svg" width="100%" height="100%">            <defs>                <marker id="arrow" viewBox="0 0 10 10" refX="3" refY="5"                        markerWidth="6" markerHeight="6" orient="auto">                    <path d="M 0 0 L 10 5 L 0 10 z" />                </marker>            </defs>            <g fill="none" stroke="black" stroke-width="2" marker-end="url(#arrow)"></g>        </svg>'); o.prepend(r) } }(), var e = o.find(".arg-Graph_item"); t.each(e, function (e, r) { t(r).mousedown(function (e) { e.stopPropagation(), e.preventDefault(); var r = t(e.target); return h || (h = !0, f = t(this).attr("Id"), i = r.is(".arg-Graph_connector-handler") ? "C" : "D"), !1 }) }), g() }, n.isInDragging = function () { return h }, n.output = function () { var e = n.settings.groupingAttr, r = t(".arg-Graph_item"), a = {}; return t.each(r, function (r, n) { var i = t(n), f = i.attr("data-next-ids"); f && (f = f.split(",")), a[i.attr("id")] = { groupType: i.attr(e), nextIds: f } }), a }, n.init = function () { n.settings = t.extend({}, a, r), o.mousemove(function (e) { var r = t(this).offset(); s = { x: e.pageX - r.left, y: e.pageY - r.top }, h && ("D" === i && function () { if (h && "D" === i && s) { var t = o.find("#" + f); t && (t.css("left", s.x + "px"), t.css("top", s.y + "px")) } }(), g()), n.isInDragging() && (t(".arg-Graph_delete-item").hide(), t(".arg-Graph_connector-handler").hide()) }), n.resetGraph(), o.mouseup(function (e) { if (e.stopPropagation(), e.preventDefault(), h && "C" === i && t(e.target).is(".arg-Graph_item")) { var r = t(e.target), a = r.attr("id"), n = o.find("#" + f); if (a != n.attr("id") && r.hasClass("arg-Graph_item")) { var s = n.attr("data-next-ids"); s ? s.split(",").indexOf(a) < 0 && (s += "," + a, n.attr("data-next-ids", s)) : (s = r.attr("id"), n.attr("data-next-ids", s)) } } return h && (h = !1, f = null, i = null, g()), !1 }), o.find(".arg-Graph_item").mouseover(function (e) { var r = t(this); r.find(".arg-Graph_delete-item").show(), r.find(".arg-Graph_connector-handler").show() }).mouseleave(function (e) { t(".arg-Graph_delete-item").hide(), t(".arg-Graph_connector-handler").hide() }).click(function (e) { var r = t(this); if (t(e.target).is(".arg-Graph_delete-item")) { var a = r.attr("id"); t.each(t(".arg-Graph_item"), function (e, r) { var n = t(r), i = n.attr("data-next-ids"); if (i) { var f = i.split(",").filter(function (t) { return t !== a }).join(","); f ? n.attr("data-next-ids", f) : n.removeAttr("data-next-ids") } }), r.remove(), n.resetGraph() } }) }, n.init() }, t.fn.ArgGraph = function (e) { return this.output = function () { var r = t(this); return new t.ArgGraph(r[0], e).output() }, this.each(function () { var r = t(this), a = new t.ArgGraph(this, e); null == r.data("arg-Graph") ? r.data("arg-Graph", a) : a.resetGraph() }) } }(jQuery);
